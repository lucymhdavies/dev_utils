#!/bin/bash

# Dependencies:
# Homebrew
#	brew install coreutils


is_osx=`uname | grep -i darwin | wc -l`

# git init
alias ssh_init="eval \`ssh-agent -s\` ; ssh-add ~/.ssh/lucy.lucymhdavies.com"

# bash stuff
alias realias="source ~/.bash_aliases"
function analyse_bashrc {
	grep --color=yes -n $1 ~/.bash* | grep -v ".bash_history"
}

# vim stuff
alias vi="vim -p"
alias view="vi -R"
export EDITOR=vim
alias vibash="vi ~/.bashrc"
alias vialiases="vi ~/.bash_aliases; realias"
# because when you use vim a lot, you expect :q to be quit
alias :q="exit"
alias :Q="exit"
alias :wq="exit"

# git aliases
alias gdiff="git diff --color"
alias gpush="git push"
alias gfetch="git fetch --all"
alias gpull="git pull"
alias gcom="git commit"
alias gadd="git add"
alias gstatus="git status"
alias gbranch="git branch -avv"
alias gpom="git push origin master"
alias gpushthis="git push origin \`git rev-parse --abbrev-ref HEAD\`"
alias gdiagram="git log --graph --color --decorate --oneline --all"
alias gadint="git add --interactive"

alias copy="rsync -z -r -v -h --progress"
alias hgrep="history | grep"
alias c="clear"
alias df="df -h"
alias color_less="less -r"

alias grin="grep -rin --color=yes"
function g { 
	grin "$@" .
}
alias gc="g --color=yes"
alias gl="g -l --color=no"
function vigl {
	vi `gl "$@"`
}


# disk usage
alias dush="du -sh"
if [ $is_osx -eq 0 ] ; then
	alias dusort="du --max-depth=1 -h | sort -h"
	alias duh="du --max-depth=1 -h"
else
	alias dusort="du -d 1 -h | gsort -h"
	alias duh="du -d 1 -h"
fi
alias fileshere="find | wc -l"
alias how_many_files="find | wc -l"


# archive/unarchive
function archivedir {
	d=`echo $1 | sed -e 's#/$##'`

	tar -zcvf $d.tar.gz $d
	du -sh $d
	du -sh $d.tar.gz

	echo "Delete $d?" ; read
	echo "Deleting"
	rm -rf $d
}
alias ad="archivedir"

function unarchivedir {
	tar -zxvf $1

	echo "Delete $1?" ; read
	echo "Deleting"
	rm $1
}
alias uad="unarchivedir"


alias quota="quota -s"
alias grep="grep --color=auto"


if [ $is_osx -eq 0 ] ; then
	alias ls="ls --color=auto"
else
	alias ls="ls -G"
fi
alias ll="ls -lh"


# toggle variable between 0 and 1
var_toggle()
{
    eval "_VAR_TOGGLE=\$$1"
    [ ${_VAR_TOGGLE:-0} = ${3:-0} ] &&
                 _VAR_TOGGLE=${2:-1} ||
              _VAR_TOGGLE=${3:-0}
    eval "$1=\$_VAR_TOGGLE"
}


# be case insensitive when you tab complete
#bind "set completion-ignore-case on"
ignore_case=1
function toggle_ignore_case()
{
	var_toggle ignore_case

	if [ "$ignore_case" == "0" ]; then
		echo "Turning off ignore case"
		bind "set completion-ignore-case off"
	else
		echo "Turning on ignore case"
	bind "set completion-ignore-case on"
	fi
}


alias mkdir="mkdir -p"
function mkcd {
    mkdir -p "$1"
    cd "$1"
}


alias untar_tar.bz2="tar -xjf"
alias tar_tar.bz2="tar -cjf"
alias untar_tar.gz="tar -xf"
alias untar_tgz="tar -xf"
alias tar_tgz="tar -cf"
alias unjar="jar xf"


alias myip="curl -s icanhazip.com"


if [ $is_osx -eq 0 ] ; then
	alias apt-get="sudo apt-get"
	alias agi="sudo apt-get install"
fi

# GNU Screen Stuff
alias screenlist="screen -list"
alias lsc="screenlist"
alias rescreen="screen -x"
alias resc="rescreen"
function kill_screen {
	screen -S $1 -p 0 -X quit
}


alias add_tab_start="sed 's/^/\t/g'"


alias edot="echo -n ."
alias eline40="echo =============================="


# preappend timestamp to start of line
alias timestamp_line="awk '{ print strftime(\"%Y-%m-%d %H:%M:%S\t\"), \$0; fflush(); }'"
alias tsl=timestamp_line


# push ssh key to server
# TODO: specify which key to push
function push-key {
	ssh $1 "echo '`cat ~/.ssh/id_rsa.pub`' >> ~/.ssh/authorized_keys"
}

# Some more OS X specific stuff
if [ $is_osx -eq 1 ] ; then
	alias app='open -a' # usage: 'app itunes' will open itunes, mac only

	# QuickLook from the command line
	# Display files in Quick Look
	function ql () {
		(qlmanage -p "$@" > /dev/null 2>&1 &
		local ql_pid=$!
		read -sn 1
		kill ${ql_pid}) > /dev/null 2>&1
	}
	# Display any filetype as plain text
	function qlt () {
		(qlmanage -p -c public.plain-text "$@" > /dev/null 2>&1 &
		local ql_pid=$!
		read -sn 1
		kill ${ql_pid}) > /dev/null 2>&1
	}
fi



# because all my environments are set up like this, I can do..
alias cdgit="cd ~/git_src" # a weird naming habit I picked up from OpenBet
alias vigit="vi ~/git_src/dev_utils/env/bash_aliases && source ~/git_src/dev_utils/env/bash_aliases"

# Useful for copypasting from the terminal, without all the fluff
alias simple_terminal="PS1='\n$ '"


# fun things
if [ $is_osx -eq 0 ] ; then
	myname=`finger | grep \`whoami\` | head -n1 | cut -d " " -f3`
else
	myname=`finger | grep \`whoami\` | head -n1 | cut -d " " -f6`
fi
alias splash='echo "$myname used Splash! But nothing happened!"'
alias voodoo-witchcraft='echo "$myname used Voodoo Witchcraft! But nothing happened!"'


# rlwrap is useful
alias tclsh="rlwrap tclsh"


# diff commits from two different branches
function gbmeld {
	branch_file=/tmp/gbmeld_branch
	master_file=/tmp/gbmeld_masterlog

	git log master > $master_file
	git log $1     > $branch_file

	meld $branch_file $master_file

	rm $branch_file $master_file
}
